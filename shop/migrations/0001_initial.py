# Generated by Django 4.0.10 on 2025-03-18 13:29

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='Название')),
                ('description', models.CharField(max_length=255, verbose_name='Описание')),
            ],
            options={
                'verbose_name': 'Категория',
                'verbose_name_plural': 'Категории',
            },
        ),
        migrations.CreateModel(
            name='Manufacturer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='Производитель')),
                ('country', models.CharField(max_length=255, verbose_name='Страна')),
            ],
            options={
                'verbose_name': 'Производитель',
                'verbose_name_plural': 'Производители',
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('buyer_lastname', models.CharField(max_length=255, verbose_name='Фамилия покупателя')),
                ('buyer_name', models.CharField(max_length=255, verbose_name='Имя покупателя')),
                ('buyer_surname', models.CharField(blank=True, max_length=255, null=True, verbose_name='Отчество покупателя')),
                ('comment', models.CharField(blank=True, max_length=255, null=True, verbose_name='Комментарий к заказу')),
                ('delivery_address', models.CharField(blank=True, max_length=255, null=True, verbose_name='Адрес доставки')),
                ('delivery_type', models.CharField(choices=[('SH', 'Магазин'), ('CR', 'Доставка курьером'), ('PP', 'Пункт выдачи')], default='SH', max_length=2, verbose_name='Способ доставки')),
                ('date_create', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('date_finish', models.DateTimeField(blank=True, null=True, verbose_name='Дата завершения')),
                ('is_packed', models.BooleanField(default=False, verbose_name='Товар упакован')),
                ('is_ready', models.BooleanField(default=False, verbose_name='Товар готов к получению')),
            ],
            options={
                'verbose_name': 'Заказ',
                'verbose_name_plural': 'Заказы',
            },
        ),
        migrations.CreateModel(
            name='Parametr',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='Название')),
            ],
            options={
                'verbose_name': 'Характеристика',
                'verbose_name_plural': 'Характеристики',
            },
        ),
        migrations.CreateModel(
            name='Pos_parametr',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(max_length=255, verbose_name='Значение')),
                ('parametr', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='shop.parametr', verbose_name='Характеристика')),
            ],
            options={
                'verbose_name': 'Характеристика товара',
                'verbose_name_plural': 'Характеристики товаров',
            },
        ),
        migrations.CreateModel(
            name='Pos_supply',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('count', models.PositiveIntegerField(verbose_name='Количество товара')),
            ],
            options={
                'verbose_name': 'Позиция поставки',
                'verbose_name_plural': 'Позиции поставок',
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='Название')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Описание')),
                ('price', models.FloatField(verbose_name='Цена')),
                ('create_date', models.DateTimeField(auto_now_add=True, verbose_name='Дата добавления')),
                ('update_date', models.DateTimeField(auto_now=True, verbose_name='Дата последнего изменения')),
                ('photo', models.ImageField(blank=True, null=True, upload_to='image/%Y/%m/%d', verbose_name='Фотография товара')),
                ('is_exists', models.BooleanField(default=True, verbose_name='Логическое удаление')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='shop.category', verbose_name='Категория')),
                ('parametr', models.ManyToManyField(default='Без параметра', through='shop.Pos_parametr', to='shop.parametr', verbose_name='Характеристики товара')),
            ],
            options={
                'verbose_name': 'Товар',
                'verbose_name_plural': 'Товары',
            },
        ),
        migrations.CreateModel(
            name='Supplier',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='Название компании')),
                ('agent_lastname', models.CharField(max_length=255, verbose_name='Фамилия представителя')),
                ('agent_name', models.CharField(max_length=255, verbose_name='Имя представителя')),
                ('agent_surname', models.CharField(blank=True, max_length=255, null=True, verbose_name='Отчество представителя')),
                ('agent_telephone', models.CharField(max_length=16, verbose_name='Телефон представителя')),
                ('address', models.CharField(max_length=255, verbose_name='Адрес')),
                ('is_exists', models.BooleanField(default=True, verbose_name='Логическое удаление')),
            ],
            options={
                'verbose_name': 'Поставщика',
                'verbose_name_plural': 'Поставщики',
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='Название')),
                ('description', models.CharField(blank=True, max_length=255, null=True, verbose_name='Описание')),
            ],
            options={
                'verbose_name': 'Тег',
                'verbose_name_plural': 'Теги',
            },
        ),
        migrations.CreateModel(
            name='Warehouse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('location', models.CharField(max_length=255, verbose_name='Местоположение')),
                ('capacity', models.PositiveIntegerField(verbose_name='Вместимость')),
            ],
            options={
                'verbose_name': 'Склад',
                'verbose_name_plural': 'Склады',
            },
        ),
        migrations.CreateModel(
            name='Supply',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_supply', models.DateTimeField(verbose_name='Дата поставки товара')),
                ('product', models.ManyToManyField(through='shop.Pos_supply', to='shop.product', verbose_name='Товар')),
                ('supplier', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='shop.supplier', verbose_name='Поставщик')),
            ],
            options={
                'verbose_name': 'Поставка',
                'verbose_name_plural': 'Поставки',
            },
        ),
        migrations.CreateModel(
            name='Shipment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_shipped', models.DateTimeField(verbose_name='Дата отправки')),
                ('tracking_number', models.CharField(max_length=255, verbose_name='Номер отслеживания')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shop.order', verbose_name='Заказ')),
            ],
            options={
                'verbose_name': 'Отправка',
                'verbose_name_plural': 'Отправки',
            },
        ),
        migrations.CreateModel(
            name='Return',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reason', models.TextField(verbose_name='Причина возврата')),
                ('date_returned', models.DateTimeField(verbose_name='Дата возврата')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shop.order', verbose_name='Заказ')),
            ],
            options={
                'verbose_name': 'Возврат',
                'verbose_name_plural': 'Возвраты',
            },
        ),
        migrations.AddField(
            model_name='product',
            name='tag',
            field=models.ManyToManyField(blank=True, default='Без тега', to='shop.tag', verbose_name='Тег'),
        ),
        migrations.AddField(
            model_name='pos_supply',
            name='product',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='shop.product', verbose_name='Продукт'),
        ),
        migrations.AddField(
            model_name='pos_supply',
            name='supply',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='shop.supply', verbose_name='Поставка'),
        ),
        migrations.AddField(
            model_name='pos_parametr',
            name='product',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='shop.product', verbose_name='Товар'),
        ),
        migrations.CreateModel(
            name='Pos_order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('count', models.PositiveIntegerField(default=1, verbose_name='Количество товара')),
                ('discount', models.PositiveIntegerField(default=0, verbose_name='Скидка')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='shop.order', verbose_name='Заказ')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='shop.product', verbose_name='Товар')),
            ],
            options={
                'verbose_name': 'Позиция заказа',
                'verbose_name_plural': 'Позиции заказов',
            },
        ),
        migrations.AddField(
            model_name='order',
            name='product',
            field=models.ManyToManyField(through='shop.Pos_order', to='shop.product', verbose_name='Товар'),
        ),
        migrations.AddField(
            model_name='order',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь'),
        ),
        migrations.CreateModel(
            name='Inventory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(verbose_name='Количество')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='shop.product', verbose_name='Товар')),
                ('warehouse', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='shop.warehouse', verbose_name='Склад')),
            ],
            options={
                'verbose_name': 'Инвентарь',
                'verbose_name_plural': 'Инвентарь',
            },
        ),
        migrations.CreateModel(
            name='Discount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('percentage', models.PositiveIntegerField(verbose_name='Процент скидки')),
                ('start_date', models.DateField(verbose_name='Дата начала')),
                ('end_date', models.DateField(verbose_name='Дата окончания')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shop.product', verbose_name='Товар')),
            ],
            options={
                'verbose_name': 'Скидка',
                'verbose_name_plural': 'Скидки',
            },
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)], verbose_name='Рейтинг')),
                ('comment', models.TextField(verbose_name='Комментарий')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shop.product', verbose_name='Товар')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Отзыв',
                'verbose_name_plural': 'Отзывы',
                'unique_together': {('product', 'user')},
            },
        ),
    ]
